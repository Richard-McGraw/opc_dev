---
# Source: vault/templates/csi-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-csi-provider
  namespace: vault-auth-csi
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
---
# Source: vault/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: vault-auth-csi
  labels:
    helm.sh/chart: vault-0.24.1
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
---
# Source: vault/templates/csi-agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-csi-provider-agent-config
  namespace: vault-auth-csi
  labels:
    helm.sh/chart: vault-0.24.1
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
data:
  config.hcl: |
    vault {
        "address" = "http://vault.vault-auth-csi.svc:8200"
    }

    cache {}

    listener "unix" {
        address = "/var/run/vault/agent.sock"
        tls_disable = true
    }
---
# Source: vault/templates/csi-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-csi-provider-clusterrole
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
---
# Source: vault/templates/csi-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-csi-provider-clusterrolebinding
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-csi-provider-clusterrole
subjects:
- kind: ServiceAccount
  name: vault-csi-provider
  namespace: vault-auth-csi
---
# Source: vault/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
  labels:
    helm.sh/chart: vault-0.24.1
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: vault
  namespace: vault-auth-csi
---
# Source: vault/templates/csi-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-csi-provider-role
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
  resourceNames:
    - vault-csi-provider-hmac-key
# 'create' permissions cannot be restricted by resource name:
# https://kubernetes.io/docs/reference/access-authn-authz/rbac/#referring-to-resources
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
# Source: vault/templates/csi-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-csi-provider-rolebinding
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-csi-provider-role
subjects:
- kind: ServiceAccount
  name: vault-csi-provider
  namespace: vault-auth-csi
---
# Source: vault/templates/csi-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vault-csi-provider
  namespace: vault-auth-csi
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-csi-provider
      app.kubernetes.io/instance: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-csi-provider
        app.kubernetes.io/instance: vault
    spec:

      serviceAccountName: vault-csi-provider
      containers:
        - name: vault-csi-provider


          image: "hashicorp/vault-csi-provider:1.3.0"
          imagePullPolicy: IfNotPresent
          args:
            - --endpoint=/provider/vault.sock
            - --debug=false
            - --hmac-secret-name=vault-csi-provider-hmac-key
            - -vault-addr=https://vault-test.nase.team
            - -vault-tls-ca-cert=/mnt/tls/ca.crt
          env:
            - name: VAULT_ADDR
              value: "unix:///var/run/vault/agent.sock"
          volumeMounts:
            - name: providervol
              mountPath: "/provider"
            - name: agent-unix-socket
              mountPath: /var/run/vault
            - mountPath: /mnt/tls
              name: vault-server-tls
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
        - name: vault-agent
          image: "registry.connect.redhat.com/hashicorp/vault:1.13.1-ubi"
          imagePullPolicy: IfNotPresent

          command:
            - vault
          args:
            - agent
            - -config=/etc/vault/config.hcl
          ports:
            - containerPort: 8200
          env:
            - name: VAULT_LOG_LEVEL
              value: "info"
            - name: VAULT_LOG_FORMAT
              value: "standard"
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 100
            runAsGroup: 1000
          volumeMounts:
            - name: agent-config
              mountPath: /etc/vault/config.hcl
              subPath: config.hcl
              readOnly: true
            - name: agent-unix-socket
              mountPath: /var/run/vault
            - mountPath: /mnt/tls
              name: vault-server-tls
              readOnly: true
      volumes:
        - name: providervol
          hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
        - name: agent-config
          configMap:
            name: vault-csi-provider-agent-config
        - name: agent-unix-socket
          emptyDir:
            medium: Memory
        - name: vault-server-tls
          secret:
            secretName: vault-server-tls
